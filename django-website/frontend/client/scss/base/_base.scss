// Base
// ----

// Set custom selection highlight.
::selection {
    background: $green;
    color: $white;
}

// Set up default styles on the root element:
// [1] Set main font rules
// [2] set box-sizing to border-box
html {
  box-sizing: border-box; // [2]
  height: 100%;
  font: $weight-normal 18px/1.618 $aktiv; // [1]
  letter-spacing: 0.056rem;

  @media #{$min-large} {
    font-size: 20px;
  }
}

// Switch Flexbox to on in order to get a sticky footer
// [1] We need to specify a height because items don't automatically expands to
//     fit when flex direction is vertical. This value allows us to obtain a
//     sticky footer.
body {
  align-items: center;
  background-color: $black;
  color: $white;
  display: flex;
  flex-direction: column;
  min-height: 100%; // [1]
  overflow-x: hidden;
}

// Make all elements from the DOM inherit from the parent box-sizing
// Since `*` has a specificity of 0, it does not override the `html` value
// making all elements inheriting from the root box-sizing value
// See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
// Borrowed from https://github.com/HugoGiraudel/sass-boilerplate/blob/master/stylesheets/base/_base.scss
*, *::before, *::after {
  box-sizing: inherit;
}

// [1] Let the image fit its container without stretching
// [2] Remove space under its parent <figure>
img {
  max-height: 100%; // [1]
  max-width: 100%; // [1]
  height: auto; // [1]
  vertical-align: top; // [2]
  width: auto; // [1]
}

// [1] Apply a shadow to every <figure>
// [2] Avoid an issue where images in some cases overflow their <figure>
//     parent.
figure {
  box-shadow: $image-shadow; // [1]
  overflow: hidden; // [2]
}

// Add different general styles for blog templates
.body_blog {
  background-color: $white;
  color: $black;
  font-weight: $weight-medium;
  letter-spacing: 0.013rem;
}

// [1] Width value ensures a space between the viewport's horizontal boundaries
//     and .main's children when resizing the window. Moreover, it does not
//     affect sizes and spaces of .main's children.
// [2] Flex-grow must be activated in order to fill the entire height, only
//     then can we obtain a sticky footer.
.main {
  flex-grow: 1;
  width: calc(100vw - (2.618rem + 2.618rem));

  @media #{$max-xsmall} {
    width: calc(100vw - (1rem + 1rem));
  }
}

// [1] Add a higher top margin to every first section.
section.first_section {
  margin: 17.942rem auto 0; // [1]

  @media #{$max-medium} {
    margin-top: 11.089rem;
  }

  @media #{$small-landscape} {
    margin-top: 6.854rem;
  }

  @media #{$max-xsmall} {
    margin-top: 6.854rem;
  }
}
