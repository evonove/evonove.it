version: 2.1

orbs:
  python: circleci/python@2.1.1
  gcp-gcr: circleci/gcp-gcr@0.15.3

executors:
  builder:
    docker:
      - image: cimg/python:3.11.6

workflows:
  test_build_push:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build-and-push:
          context:
            - google-cloud-platform
          requires:
            - test
          filters:
            tags:
              only: /.*/

jobs:
  test:
    docker:
      - image: cimg/python:3.11.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: cimg/postgres:13.12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_DB: evonoveit
          POSTGRES_USER: devel
          POSTGRES_PASSWORD: 123456
      - image: cimg/redis:6.2
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Formatter check
          command: poetry run ruff format --exclude migrations --check django-website
      - run:
          name: Linter check
          command: poetry run ruff check django-website
      - run:
          name: Migrations check
          environment:
            DJANGO_SETTINGS_MODULE: website.settings.devel
          command: poetry run python django-website/manage.py makemigrations --check --dry-run
      - run:
          name: Run tests
          environment:
            DJANGO_SETTINGS_MODULE: website.settings.test
          command: |
            mkdir test-results
            poetry run python runtests.py \
                --cov django-website \
                --cov-report html:htmlcov \
                --junitxml=test-results/junit.xml \
                django-website/
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov
  build-and-push:
    executor:
      builder
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - gcp-gcr/gcr-auth:
          gcloud-service-key: CLEARTEXT_GCLOUD_SERVICE_KEY
      - gcp-gcr/build-image:
          image: $CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_SHA1
          dockerfile: containers/Dockerfile
      - gcp-gcr/push-image:
          image: $CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_SHA1
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - gcp-gcr/tag-image:
                image: $CIRCLE_PROJECT_REPONAME
                source-tag: $CIRCLE_SHA1
                target-tag: $CIRCLE_TAG
