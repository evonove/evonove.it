// Header
// ------

// [1] Header is on a lower layer compared to the nav, this way all nav's links
//     are clickable.
.header {
  left: 0;
  padding: 1.618rem 2.618rem;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: $z-header-large; // [1]

  // [1] Header is on an upper layer compared to the nav, this way header's
  //     items are visible.
  @media #{$max-small} {
    z-index: $z-header-small; // [1]
  }

  @media #{$max-xsmall} {
    padding: 1rem;
  }
}

// [1] Align the logo with the nav items.
.header-main_interactions {
  display: flex;
  justify-content: center;
  position: relative;
  top: 4px; // [1]

  @media #{$max-medium} {
    justify-content: space-between;
  }

  @media #{$max-small} {
    width: 100%;
  }
}

// [1] Fixes logo's height
.header-main_interactions-logo {
  display: flex;
  height: 21px; // [1]
}

.header-main_interactions-logo > .header_logo-e,
.header-main_interactions-logo > .header_logo-vonov,
.header-main_interactions-logo > .header_logo-9 {
  height: 21px;
  transition: all 0.382s;
}

// Set the logo to dark mode when visiting blog templates.
.body_blog .header-main_interactions-logo > .header_logo-e > path,
.body_blog .header-main_interactions-logo > .header_logo-vonov > path:not(.header_logo-n),
.body_blog .header-main_interactions-logo > .header_logo-9 > path {
  fill: $black;
}

// Set the logo to light mode when visiting blog templates on mobile devices
// and nav is open.
.body_blog .header-main_interactions-logo > .header_logo-e.is-logo_expanded > path,
.body_blog .header-main_interactions-logo > .header_logo-vonov.is-logo_expanded > path:not(.header_logo-n),
.body_blog .header-main_interactions-logo > .header_logo-9.is-logo_expanded > path {
  @media #{$max-xsmall} {
    fill: $white;
  }
}

// [1] Fix the glyph's width to avoid unneeded stretching
// [2] 'E' glyph is shifted to the right by default to obtain the truncated
//     version of the Evonove logo. We also add a little space (2px) in order
//     to keep the letter spacing.
.header-main_interactions-logo > .header_logo-e {
  transform: translate3d(32px, 0, 0); // [2]
  width: 11px; // [1]

  &.is-logo_expanded {
    transform: translate3d(-2px, 0, 0);
  }

  // First glyph does not need to translate when logo is positioned on the left
  // of the viewport
  @media #{$max-medium} {
    transform: translate3d(-2px, 0, 0);
  }
}

// [1] Fix the glyph's width to avoid unneeded stretching
// [2] '9' glyph is shifted to the right by default to obtain the truncated
//     version of the Evonove logo. We also add a little space (1px) in order
//     to keep the letter spacing.
.header-main_interactions-logo > .header_logo-9 {
  transform: translate3d(-33px, 0, 0); // [2]
  width: 11px; // [1]

  &.is-logo_expanded {
    transform: translate3d(2px, 0, 0);
  }

  // Translate the last glyph on the first one's side.
  @media #{$max-medium} {
    transform: translate3d(-67px, 0, 0);
  }
}

// [1] Fix the glyph's width to avoid unneeded stretching
.header-main_interactions-logo > .header_logo-vonov {
  opacity: 0;
  transform: scale3d(0, 1, 1);
  transform-origin: center;
  width: 68px; // [1]

  &.is-logo_expanded {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }

  @media #{$max-medium} {
    transform-origin: left;
  }
}

// [1] 'Menu' and 'close' buttons are shown only small screens.
// [2] Avoid text selection when user clicks on the button.
.button.open_nav,
.button.close_nav, {
  color: $light-grey;
  display: none; // [1]
  user-select: none; // [2]

  &::before {
    border-color: $light-grey;
  }

  @media #{$max-small} {
    display: block;
  }
}

// The open button must be darker because it is placed on a white background.
.body_blog .button.open_nav {
  color: $dark-grey;

  &::before {
    border-color: $dark-grey;
  }
}

// Avoid color variations when user taps on the header button.
.body_blog .button.close_nav:hover {
  color: $light-grey;

  &::before {
    border-color: $light-grey;
  }
}

// 'Close' button has the same position of 'Open' button
.button.close_nav {
  position: absolute;
  right: 0;
  top: 0;
}

// [1] Enable transforms on an inline element
.button.open_nav > span,
.button.close_nav > span {
  display: inline-block; // [1]
  transition: all 0.236s;
  transform-origin: top;
}

// [1] 'Open' must appear after 'Close' disappeared.
.button.open_nav > span {
  opacity: 1;
  transform: scale3d(1, 1, 1) translate(0, 0, 0);
  transition-delay: 0.236s; // [1]

  // [1] 'Open' must disappear before 'Close' appeared.
  &.is-nav_shown {
    opacity: 0;
    transform: scale3d(1, 0, 1) translate(0, -0.618rem, 0);
    transition-delay: 0s; // [1]
  }
}

// [1] 'Close' must disappear before 'Open' appeared.
.button.close_nav > span {
  opacity: 0;
  transform: scale3d(1, 0, 1) translate(0, -0.618rem, 0);
  transition-delay: 0s; // [1]

  // [1] 'Close' must appear after 'Open' disappeared.
  &.is-nav_shown {
    opacity: 1;
    transform: scale3d(1, 1, 1) translate(0, 0, 0);
    transition-delay: 0.236s; // [1]
  }
}
